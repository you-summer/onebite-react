// 1. Spread 연산자
// -> Spread : 흩뿌리다, 펼치다 라는 뜻
// -> 객체나 배열에 저장된 여러개의 값을 개별로 흩뿌려주는 역할

let arr1 = [1, 2, 3];
let arr2 = [4, ...arr1 ,5 , 6];

// arr2의 4와 5사이에 arr1의 1,2,3을 순서대로 넣고싶다면
// 기존방법은
// let arr2 = [4, arr1[0], arr1[1], arr1[2], 5, 6];
// 이 방법은 위험함 arr1 중간에 다른 숫자가 더 들어갈수도 있는거고 갑자기 삭제가 될수도 있기 때문

// 이때 쓸 수 있는 방법이 spread 연산자!
// let arr2 = [4, ...arr1 ,5 , 6]
// ...arr1 이게 스프레드 연산자 
// arr1 배열의 모든 요소들을 개별로 풀어 헤쳐라 라는 뜻 

console.log(arr2);


//객체에도 사용가능
let obj1 = {
    a: 1,
    b: 2
};
let obj2 = {
    ...obj1,
    c: 3,
    d: 4,
}
// c앞에 1,2를 넣고싶다면
// 기존방법
// let obj2 = {
//     a : obj1.a,
//     b : obj1.b,
//     c : 3,
//     d : 4
// };
// ...obj1을 사용하면 간단하게 프로퍼티들을 풀어 헤쳐 놓을 수 있음

console.log(obj2);

function funcA(p1, p2, p3) {
    console.log(p1, p2, p3);
}

// 인수로 arr1 배열의 값을 순서대로 전달하고 싶다! 라고 한다면 
funcA(...arr1); // 이렇게 스프레드 연산자로 풀어 헤쳐서 전달하면 됨
// 그러면 funcA에서는 arr1의 값이 3개니까 3개의 매개변수가 들어올거라고 생각하고 
// 3개의 매개변수 p1, p2, p3를 만들어서 각각 값을 잘 받아올 수 있음


// 2. Rest 매개변수
// -> Rest 는 나머지, 나머지 매개변수 라른 뜻을 가지고 있음
// 여러개의 매개변수를 받아야 할때 배열형태로 한방에 받아올수 있는 문법

function funcB(one,two,...rest){ //이때 ...은 매개변수를 정의하는 공간인 소괄호 안에 사용되었기 때문에 spread연산자가 아니라 rset매개변수임
 console.log(one,two,rest);
 // 첫번째 전달된 매개변수를 one이라는 변수에 저장하고싶다 라고하면 이렇게 하면됨
 // 첫번째 전달된 인수는 one에 저장됨
 // rest 매개변수 뒤에는 추가적으로 매개변수를 더 선언할 수 없음 오류발생!
 // rest 변수으 ㅣ이름은 그냥 ...만 붙이면 되는거라서 마음대로 설정해도됨
 // ...args 앞에 ...만 붙으면 상관 x
}

funcB(...arr1);


 